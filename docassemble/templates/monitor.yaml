apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Release.Name }}-mon-sa
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ .Release.Name }}-mon-role-binding
subjects:
- kind: ServiceAccount
  name: {{ .Release.Name }}-mon-sa
  namespace: {{ .Release.Namespace }}
roleRef:
  kind: Role
  name: {{ .Release.Name }}-mon-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  labels:
  name: {{ .Release.Name }}-mon-role
  namespace: {{ .Release.Namespace }}
rules:
- apiGroups:
  - ""
  resources: ["*"]
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extensions
  resources: ["*"]
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources: ["*"]
  verbs:
  - get
  - list
  - watch
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-docassemble-monitor
  labels:
    app: {{ .Release.Name }}-docassemble-monitor
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}-docassemble-monitor
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-docassemble-monitor
    spec:
      serviceAccountName: {{ .Release.Name }}-mon-sa
      containers:
      - name: monitor
        image: {{ template "docassemble.daMonitorImage" . }}
        imagePullPolicy: {{ .Values.daMonitorImage.pullPolicy | quote }}
        envFrom:
          - secretRef:
              name: {{ .Release.Name }}-docassemble-secret
        env:
        - name: NAMESPACE
          value: "{{ .Release.Namespace }}"
        - name: REPLICAS
          value: "{{ .Values.replicas }}"
        - name: POSTGRES_IMAGE
          value: {{ template "docassemble.postgresql.image" . }}
        - name: REDIS_IMAGE
          value: {{ template "docassemble.redis.image" . }}
        - name: DA_IMAGE
          value: {{ template "docassemble.daImage" . }}
        - name: DA_MONITOR_IMAGE
          value: {{ template "docassemble.daMonitorImage" . }}
        - name: POSTGRES_STORAGE
          value: "{{ .Values.postgresql.persistence.size }}"
        - name: REDIS_STORAGE
          value: "{{ .Values.redis.master.persistence.size }}"
        - name: IN_CLUSTER_NGINX
          value: "{{ .Values.inClusterNGINX }}"
        - name: IN_CLUSTER_MINIO
          value: "{{ .Values.inClusterMinio }}"
        - name: IN_CLUSTER_POSTGRES
          value: "{{ .Values.inClusterPostgres }}"
        - name: IN_CLUSTER_REDIS
          value: "{{ .Values.inClusterRedis }}"
        - name: IN_CLUSTER_RABBITMQ
          value: "{{ .Values.inClusterRabbitMQ }}"
        - name: MINIO_STORAGE
          value: "{{ .Values.minio.persistence.size }}"
        - name: MINIO_REPLICAS
          value: "{{ .Values.minio.replicaCount }}"
        {{ include "docassemble.commonEnvironment" . }}
        resources:
          requests:
            memory: "{{ .Values.resources.monitor.requests.memory }}"
            cpu: "{{ .Values.resources.monitor.requests.cpu }}"
          limits:
            memory: "{{ .Values.resources.monitor.limits.memory }}"
            cpu: "{{ .Values.resources.monitor.limits.cpu }}"
---
kind: Service
apiVersion: v1
metadata:
  name: {{ .Release.Name }}-docassemble-monitor-service
  labels:
    service: {{ .Release.Name }}-docassemble-monitor-service
spec:
  selector:
    app: {{ .Release.Name }}-docassemble-monitor
  ports:
    - port: 80
      targetPort: 80
      name: http
      protocol: TCP
